// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int       @id @default(autoincrement())
  name       String
  password   String
  email      String    @unique
  roleId     Int       @default(3)
  created_at DateTime? @default(now())

  Role       Role     @relation(fields: [roleId], references: id)
  Deliveries Orders[] @relation("CourierOrders")
}

model Orders {
  id            Int       @id @default(autoincrement())
  city          String?
  name          String?
  mobile        String?
  address       String?
  comment       String?
  price         Int?
  deliveryPrice Int?
  sum           Int?
  statusId      Int       @default(1)
  courierId     Int?
  userId        Int?      // userId field added
  created_at    DateTime? @default(now())

  status  status @relation(fields: [statusId], references: id)
   // Relation without fields/ references, handled by the other model
  Courier Users? @relation("CourierOrders", fields: [courierId], references: [id])
}

model status {
  id   Int    @id @default(autoincrement())
  name String @unique

  Orders Orders[]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  Users Users[]
}
